eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIHZhbGlkYXRlOgogICAgaW1hZ2U6IGNocmlzbnMvcGFja2VyLWFuc2libGUKICAgIGVudmlyb25tZW50OgogICAgY29tbWFuZHM6CiAgICAgIC0gZXhwb3J0IEhPTUU9L2hvbWUvcGFja2VyCiAgICAgIC0gcGFja2VyIHZhbGlkYXRlIHBhY2tlci5qc29uCgogIGluc3BlY3Q6CiAgICBpbWFnZTogY2hyaXNucy9wYWNrZXItYW5zaWJsZQogICAgZW52aXJvbm1lbnQ6CiAgICBjb21tYW5kczoKICAgICAgLSBleHBvcnQgSE9NRT0vaG9tZS9wYWNrZXIKICAgICAgLSBwYWNrZXIgaW5zcGVjdCBwYWNrZXIuanNvbgoKICBidWlsZDoKICAgIGltYWdlOiBjaHJpc25zL3BhY2tlci1hbnNpYmxlCiAgICBlbnZpcm9ubWVudDoKICAgIGNvbW1hbmRzOgogICAgICAtIGV4cG9ydCBIT01FPS9ob21lL3BhY2tlcgogICAgICAtIHBhY2tlciBidWlsZCBwYWNrZXIuanNvbgoKICBwYWNrZXItY29weS1wcm9kOgogICAgaW1hZ2U6IGNocmlzbnMvcGFja2VyLWVuY3J5cHQtY29weQogICAgcHVsbDogdHJ1ZQogICAgY29tbWFuZHM6CiAgICAgIC0gZXhwb3J0IGZpbHRlcnM9Ii0tb3duZXIgMDkzNDAxOTgyMzg4IC0tZmlsdGVycyAiTmFtZT1uYW1lLFZhbHVlcz1kcS1kYXRhLWluZ2VzdCoiIgogICAgICAtIGV4cG9ydCBhd3NfaWQ9JHtQUk9EX0FDQ19JRH0KICAgICAgLSBleHBvcnQgYXdzX2tleT0ke1BST0RfQUNDX0tFWX0KICAgICAgLSBleHBvcnQgcmVnaW9uPWV1LXdlc3QtMgogICAgICAtIGV4cG9ydCBIT01FPS9ob21lL3BhY2tlcgogICAgICAtIGNkIC9ob21lL3BhY2tlcgogICAgICAtIC4vYnVpbGQuc2gKICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdXNoCiAgICAgIGJyYW5jaDogbWFzdGVyCgogIHBhY2tlci1jb3B5LW5vdHByb2Q6CiAgICBpbWFnZTogY2hyaXNucy9wYWNrZXItZW5jcnlwdC1jb3B5CiAgICBwdWxsOiB0cnVlCiAgICBjb21tYW5kczoKICAgICAgLSBleHBvcnQgZmlsdGVycz0iLS1vd25lciAwOTM0MDE5ODIzODggLS1maWx0ZXJzICJOYW1lPW5hbWUsVmFsdWVzPWRxLWRhdGEtaW5nZXN0KiIiCiAgICAgIC0gZXhwb3J0IGF3c19pZD0ke05PVFBST0RfQUNDX0lEfQogICAgICAtIGV4cG9ydCBhd3Nfa2V5PSR7Tk9UUFJPRF9BQ0NfS0VZfQogICAgICAtIGV4cG9ydCByZWdpb249ZXUtd2VzdC0yCiAgICAgIC0gZXhwb3J0IEhPTUU9L2hvbWUvcGFja2VyCiAgICAgIC0gY2QgL2hvbWUvcGFja2VyCiAgICAgIC0gLi9idWlsZC5zaAogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKICAgICAgYnJhbmNoOiBtYXN0ZXIK.9nn2KMXfoXE2ThGp1TEgb_KfrNsyUTl5AyH91tCZHw8