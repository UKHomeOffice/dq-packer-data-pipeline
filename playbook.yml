---

- name: Build Windows server.
  hosts: all
  gather_facts: false
  tasks:
    - name: install all critical and security updates
      win_updates:
        category_names:
          - CriticalUpdates
          - SecurityUpdates
          - UpdateRollups
        state: installed

    - name: Firewall rules
      win_shell: |
        Set-NetFirewallProfile -Profile Domain -Enabled False
        Set-NetFirewallRule -Group "@FirewallAPI.dll,-28502" -Direction Inbound -Profile Domain -Enabled True

    - name: Rename computer
      win_shell: |
        Rename-Computer -NewName DATA-PIPELINE1

    - name: Create directory structure for custom install packages
      win_file:
        path: C:\tmp\install
        state: directory

    - name: Create Wherescape directory
      win_file:
        path: C:\tmp\install\Wherescape
        state: directory

    - name: Create LOG folder
      win_file:
        path: C:\LOG
        state: directory

    - name: Create data-transfer folder
      win_file:
        path: C:\data-transfer
        state: directory

    - name: Create scripts folder
      win_file:
        path: C:\scripts
        state: directory

    - name: Create PSTools directory
      win_file:
        path: C:\PSTools
        state: directory

    - name: Create Tableau install folder
      win_file:
        path: C:\tableau_script\command_line_utility\tabcmd
        state: directory

    - name: Download PsTools
      win_shell: |
        $url = "https://download.sysinternals.com/files/PSTools.zip"
        $output = "C:\tmp\install\PSTools.zip"
        $wc = New-Object System.Net.WebClient
        $wc.DownloadFile($url, $output)

    - name: Unzip PsTools
      win_unzip:
        src: C:\tmp\install\PSTools.zip
        dest: C:\PSTools\
        delete_archive: yes

    - name: Install Cholocatey
      win_shell: |
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        choco feature enable -n allowGlobalConfirmation

    - name: Install python2.7
      win_chocolatey:
        name: python2
        state: present

    - name: Install python3
      win_chocolatey:
        name: python3
        state: present

    - name: Ensure that Python2.7 and Python3.6 are present on the global system path
      win_path:
        elements:
        - 'C:\Python36'
        - 'C:\Python27'
        - 'C:\data-transfer'
        - 'C:\PSTools'

    - name: Download AWSCLI
      win_shell: |
        $url = "https://s3.amazonaws.com/aws-cli/AWSCLI64.msi"
        $output = "C:\tmp\install\AWSCLI64.msi"
        $wc = New-Object System.Net.WebClient
        $wc.DownloadFile($url, $output)

    - name: AWS CLI install
      win_package:
        path: C:\tmp\install\AWSCLI64.msi
        state: present

    - name:  GET config files from S3
      win_shell: |
        aws configure set aws_access_key_id '{{user_access_key}}'
        aws configure set aws_secret_access_key '{{secret_access_key}}'
        aws s3 cp s3://dq-config-bucket/dq-data-pipeline-server/ C:\tmp\install\ --recursive
      args:
        executable: powershell.exe

    - name: Delete AWS CLI config
      win_shell: |
        $folders = "'C:\Windows\System32\config\systemprofile\.aws\','C:\Users\Administrator\.aws\'"
        Get-ChildItem $folders -r -filter credentials | Remove-Item
      args:
        executable: powershell.exe

    - name: Convert line endings from Linux to Windows (PowerShell)
      win_shell: '(Get-Content "C:\tmp\install\partitioning.txt") -replace "`n", "`r`n" | Set-Content "C:\tmp\install\volume_partitioning.txt"'

    - name: Run diskpart
      win_shell: diskpart /s C:\tmp\install\volume_partitioning.txt
      args:
        executable: cmd.exe

    - name: Create Backup folder on D
      win_file:
        path: D:\Backups
        state: directory

    - name: Create Deployment Logs on D
      win_file:
        path: D:\Deployment_Logs
        state: directory

    - name: Create Deployment Logs on D
      win_file:
        path: D:\Deployment_Logs
        state: directory

    - name: Create SVN folders
      win_file:
        path: D:\SVN\trunk\Wherescape\scripts\nrt
        state: directory

    - name: Create Wherescape TEMP folder
      win_file:
        path: D:\Wherescape\Temp
        state: directory

    - name: Install PyODBC
      win_shell: pip3.exe install pyodbc
      args:
        executable: cmd.exe

    - name: Install putty and plink
      win_chocolatey:
        name: putty
        state: present

    - name: Download Python 2.5.4
      win_shell: |
        $url = "https://www.python.org/ftp/python/2.5.4/python-2.5.4.msi"
        $output = "C:\tmp\install\python-2.5.4.msi"
        $wc = New-Object System.Net.WebClient
        $wc.DownloadFile($url, $output)

    - name: Install Python 2.5.4
      win_package:
        path: C:\tmp\install\python-2.5.4.msi
        state: present

    - name: Add Python25 to Path
      win_path:
        elements:
        - C:\Python25

    - name: Add Python versions to PYTHONPATH
      win_path:
        name: PYTHONPATH
        elements:
        - C:\Python25
        - C:\Python27
        - C:\Python36

    - name: Download PGAdmin3 1.18.1
      win_shell: |
        $url = "https://ftp.postgresql.org/pub/pgadmin/pgadmin3/v1.18.1/win32/pgadmin3-1.18.1.zip"
        $output = "C:\tmp\install\pgadmin3-1.18.1.zip"
        $wc = New-Object System.Net.WebClient
        $wc.DownloadFile($url, $output)

    - name: Unzip PGAdmin 1.18.1
      win_unzip:
        src: C:\tmp\install\pgadmin3-1.18.1.zip
        dest: C:\tmp\install\pgadmin3-1.18.1
        delete_archive: yes

    - name: Install PGAdmin 1.18.1
      win_package:
        path: C:\tmp\install\pgadmin3-1.18.1\pgadmin3.msi
        state: present

    - name: Download PSQLODBC driver
      win_shell: |
        $url = "https://ftp.postgresql.org/pub/odbc/versions/msi/psqlodbc_10_01_0000-x64.zip"
        $output = "C:\tmp\install\psqlodbc_10_01_0000-x64.zip"
        $wc = New-Object System.Net.WebClient
        $wc.DownloadFile($url, $output)

    - name: Unzip PSQLODBC driver
      win_unzip:
        src: C:\tmp\install\psqlodbc_10_01_0000-x64.zip
        dest: C:\tmp\install\psqlodbc_10_01_0000-x64
        delete_archive: yes

    - name: Install PSQL ODBC driver
      win_package:
        path: C:\tmp\install\psqlodbc_10_01_0000-x64\psqlodbc_x64.msi
        state: present

    - name: Install GP loader
      win_package:
        path: C:\tmp\install\greenplum-loaders-4.3.4.0-build-1-WinXP-x86_32.msi
        state: present

    - name: Add Python25 to GPHOME_LOADERS vars
      win_path:
        name: GPHOME_LOADERS
        elements: C:\Python25

    - name: Download scripts repo from Github
      win_shell: |
        $url = "https://github.com/UKHomeOffice/dq_wherescape_scripts/archive/master.zip"
        $output = "C:\tmp\install\dq_wherescape_scripts-master.zip"
        $wc = New-Object System.Net.WebClient
        $wc.DownloadFile($url, $output)

    - name: Unzip wherescape
      win_unzip:
        src: C:\tmp\install\dq_wherescape_scripts-master.zip
        dest: C:\tmp\install\
        delete_archive: yes

    - name: Copy scripts to correct location
      win_shell: |
        $extractPath = "C:\tmp\install\dq_wherescape_scripts-master"
        $destinationPath = "D:\SVN\trunk\Wherescape\scripts\nrt"
        Get-ChildItem $extractPath | Copy -Destination $destinationPath -Recurse
        Remove-Item $extractPath -Recurse -Force

    - name: Copy PSEXEC to scripts folder
      win_copy:
        src: C:\PSTools\PsExec.exe
        dest: D:\SVN\trunk\Wherescape\scripts\nrt\PsExec.exe
        remote_src: True

    - name: Download SQL Management studio
      win_shell: |
        $url = "https://go.microsoft.com/fwlink/?linkid=864329"
        $output = "C:\tmp\install\SSMS-Setup-ENU.exe"
        $wc = New-Object System.Net.WebClient
        $wc.DownloadFile($url, $output)

    - name: Install SQL Management studio
      win_shell: |
        C:\tmp\install\SSMS-Setup-ENU.exe /install /quiet /norestart

    - name: Install Tableau cmd
      win_shell: |
        c:\tmp\install\TabcmdInstaller-x64.exe /VERYSILENT /NORESTART

    - name: Unzip Cloudwatch config file
      win_unzip:
        src: C:\tmp\install\AWS.EC2.Windows.Cloudwatch.json.zip
        dest: C:\Program Files\Amazon\SSM\Plugins\awsCloudWatch
        delete_archive: yes

    - name: Save CW config by restarting the Service
      win_shell: |
        Restart-Service AmazonSSMAgent
